
Send Feedback
Given two integer arrays. Check if second array is a subset of first array.
Input format :
Line 1 : Integer N1 
Line 2 : N1 integers separated be a single space
Line 1 : Integer N2 
Line 2 : N2 integers separated be a single space
Output Format :
 Boolean
Constraints :
 0 <= N1 <= 10^4
 0 <= N2 <= 10^4
Sample Input :
15
3 6 5 8 15 1 14 18 7 9 14 9 3 12 8 
4
18 6 9 8
Sample Output :
true


import java.util.HashMap;

public class solution {

	public static boolean CheckSubset(int[] arr1, int n1, int[] arr2, int n2) {
		HashMap<Integer, Integer> hashMap = new HashMap<>();
		for (int i = 0; i < n1; i++) {
			if (hashMap.containsKey(arr1[i]))
				hashMap.put(arr1[i], hashMap.get(arr1[i]) + 1);
			else
				hashMap.put(arr1[i], 1);
		}
		for (int i = 0; i < n2; i++) {
			if (!hashMap.containsKey(arr2[i]) || hashMap.get(arr2[i]) == 0)
				return false;
			hashMap.put(arr2[i], hashMap.get(arr2[i]) - 1);
		}
		return true;
	}
}
